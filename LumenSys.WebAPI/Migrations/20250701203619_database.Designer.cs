// <auto-generated />
using System;
using LumenSys.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LumenSys.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250701203619_database")]
    partial class database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("City");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Neighborhood");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Number");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Street");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Uf");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("city");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpfcnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("neighborhood");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("number");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)")
                        .HasColumnName("phone");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("street");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tradename");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Contracts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("DependentCount")
                        .HasColumnType("integer")
                        .HasColumnName("DependentCount");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDate");

                    b.Property<int?>("FuneralPlansId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IsActive");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDate");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FuneralPlansId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Cremation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("DeceasedPersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cremationnumber");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex("DeceasedPersonId")
                        .IsUnique();

                    b.ToTable("cremation");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.DeceasedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<DateOnly>("BirthDay")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("DeathCause")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("deathcause");

                    b.Property<int>("Marital")
                        .HasColumnType("integer")
                        .HasColumnName("marital");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nationality");

                    b.Property<int>("Sex")
                        .HasColumnType("integer")
                        .HasColumnName("sex");

                    b.Property<int?>("WakeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("WakeId");

                    b.ToTable("deceasedperson");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Dependent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContractId")
                        .HasColumnType("integer");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("dependent");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Funeral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("EndTime")
                        .HasColumnType("integer")
                        .HasColumnName("endtime");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("location");

                    b.Property<int>("StartTime")
                        .HasColumnType("integer")
                        .HasColumnName("starttime");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("funeral");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.FuneralPlans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AnnualValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AnnualValue");

                    b.Property<bool>("Available")
                        .HasColumnType("boolean")
                        .HasColumnName("available");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<double>("DependentAdditional")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("dependentAdditional ");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Description");

                    b.Property<int>("MaxAge")
                        .HasColumnType("integer")
                        .HasColumnName("MaxAge");

                    b.Property<int>("MaxDependents")
                        .HasColumnType("integer")
                        .HasColumnName("MaxDependents");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("funeralplans");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Thanatopraxia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("ConditionBody")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("conditionbody");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("DeceasedPersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeceasedPersonId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("thanatopraxia");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<int?>("DeceasedPersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("neighborhood");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone")
                        .HasColumnName("time");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.HasIndex("DeceasedPersonId");

                    b.ToTable("transport");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hiredate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<int>("TypeEmployee")
                        .HasColumnType("integer")
                        .HasColumnName("typeemployee");

                    b.Property<int>("UserStatus")
                        .HasColumnType("integer")
                        .HasColumnName("userstatus");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Client", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.User", "User")
                        .WithMany("Client")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Contracts", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LumenSys.WebAPI.Objects.Models.FuneralPlans", null)
                        .WithMany("Contracts")
                        .HasForeignKey("FuneralPlansId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Cremation", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.DeceasedPerson", "DeceasedPerson")
                        .WithOne("Cremation")
                        .HasForeignKey("LumenSys.WebAPI.Objects.Models.Cremation", "DeceasedPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeceasedPerson");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.DeceasedPerson", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.Client", "Client")
                        .WithMany("DeceasedPerson")
                        .HasForeignKey("ClientId");

                    b.HasOne("LumenSys.WebAPI.Objects.Models.Funeral", "Wake")
                        .WithMany("DeceasedPerson")
                        .HasForeignKey("WakeId");

                    b.Navigation("Client");

                    b.Navigation("Wake");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Dependent", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.Contracts", "Contracts")
                        .WithMany("Dependent")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Funeral", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.User", "User")
                        .WithMany("Funeral")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.FuneralPlans", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.Company", "Company")
                        .WithMany("FuneralPlans")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Thanatopraxia", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.DeceasedPerson", "deceasedPerson")
                        .WithOne("Thanatopraxia")
                        .HasForeignKey("LumenSys.WebAPI.Objects.Models.Thanatopraxia", "DeceasedPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LumenSys.WebAPI.Objects.User", "User")
                        .WithMany("Thanatopraxia")
                        .HasForeignKey("UserId");

                    b.Navigation("User");

                    b.Navigation("deceasedPerson");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Transport", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.DeceasedPerson", "DeceasedPerson")
                        .WithMany("Transport")
                        .HasForeignKey("DeceasedPersonId");

                    b.Navigation("DeceasedPerson");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.User", b =>
                {
                    b.HasOne("LumenSys.WebAPI.Objects.Models.Company", "Company")
                        .WithMany("User")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Client", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("DeceasedPerson");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Company", b =>
                {
                    b.Navigation("FuneralPlans");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Contracts", b =>
                {
                    b.Navigation("Dependent");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.DeceasedPerson", b =>
                {
                    b.Navigation("Cremation");

                    b.Navigation("Thanatopraxia")
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.Funeral", b =>
                {
                    b.Navigation("DeceasedPerson");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.Models.FuneralPlans", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("LumenSys.WebAPI.Objects.User", b =>
                {
                    b.Navigation("Client");

                    b.Navigation("Funeral");

                    b.Navigation("Thanatopraxia");
                });
#pragma warning restore 612, 618
        }
    }
}
